// Generated by CoffeeScript 1.4.0
var http, httpProxy, url;

url = require('url');

http = require('http');

httpProxy = require('http-proxy');

module.exports = function(req, res, proxy) {
  var cors_headers, header, headers, ignore, key, path, target, value, _i, _len, _ref, _ref1;
  if (!req.headers.origin) {
    console.log('req.headers.origin not given');
    res.write('hello https\n');
    res.end();
    return;
  }
  if (req.headers['access-control-request-headers']) {
    headers = req.headers['access-control-request-headers'];
  } else {
    headers = 'accept, accept-charset, accept-encoding, accept-language, authorization, content-length, content-type, host, origin, proxy-connection, referer, user-agent, x-requested-with';
    _ref = req.headers;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      header = _ref[_i];
      if (req.indexOf('x-') === 0) {
        headers += ", " + header;
      }
    }
  }
  cors_headers = {
    'access-control-allow-methods': 'HEAD, POST, GET, PUT, PATCH, DELETE',
    'access-control-max-age': '86400',
    'access-control-allow-headers': headers,
    'access-control-allow-credentials': 'true',
    'access-control-allow-origin': req.headers.origin
  };
  if (req.method === 'OPTIONS') {
    console.log('responding to OPTIONS request');
    res.writeHead(200, cors_headers);
    res.end();
  } else {
    module.exports.options = module.exports.options || {};
    if (module.exports.options.target) {
      target = module.exports.options.target;
      path = req.url;
    } else {
      _ref1 = req.url.match(/\/([^\/]+)(.*)/), ignore = _ref1[0], target = _ref1[1], path = _ref1[2];
    }
    if (!target) {
      res.write("Cannot determine target host\n");
      res.end();
      return;
    }
    console.log("proxying to " + target + path);
    for (key in cors_headers) {
      value = cors_headers[key];
      res.setHeader(key, value);
    }
    req.url = path;
    return proxy.proxyRequest(req, res, {
      host: host,
      port: port || 80
    });
  }
};
